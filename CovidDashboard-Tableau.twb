<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook original-version='18.1' source-build='2021.2.0 (20212.21.0605.1023)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='coviddeaths (PortfolioProject)' inline='true' name='federated.1npppt10px6cb81ej7ny11u7hmwt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1bpjvy91lmi62m1c9qr5k158ac9w'>
            <connection authentication='username-password' class='postgres' dbname='PortfolioProject' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1bpjvy91lmi62m1c9qr5k158ac9w' name='coviddeaths' table='[public].[coviddeaths]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1bpjvy91lmi62m1c9qr5k158ac9w' name='coviddeaths' table='[public].[coviddeaths]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[loc]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>loc</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rec_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[rec_date]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>rec_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>3</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[coviddeaths]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='DeathPercentage' datatype='real' name='[Calculation_965177703181742080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([total_deaths])/sum([total_cases]))*100' />
      </column>
      <column caption='PercentPopInfected' datatype='real' name='[Calculation_965177703187746817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([total_cases])/sum([population]))*100' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='coviddeaths' datatype='table' name='[__tableau_internal_object_id__].[coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Hosp Patients' datatype='real' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='real' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Loc' datatype='string' name='[loc]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Rec Date' datatype='date' name='[rec_date]' role='dimension' type='ordinal' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='real' name='[weekly_icu_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions Per Million' datatype='real' name='[weekly_icu_admissions_per_million]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[loc]' derivation='None' name='[none:loc:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:loc:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='orange_gold_10_0' type='palette'>
            <map to='#9e3a26'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#c64a22'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f0751e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f69e41'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f8bc5b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='coviddeaths' id='coviddeaths_B444F5E69F304917B2BC0DCE9C700DF4'>
            <properties context=''>
              <relation connection='postgres.1bpjvy91lmi62m1c9qr5k158ac9w' name='coviddeaths' table='[public].[coviddeaths]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='coviddeaths (PortfolioProject)' name='federated.1npppt10px6cb81ej7ny11u7hmwt' />
          </datasources>
          <datasource-dependencies datasource='federated.1npppt10px6cb81ej7ny11u7hmwt'>
            <column caption='DeathPercentage' datatype='real' name='[Calculation_965177703181742080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([total_deaths])/sum([total_cases]))*100' />
            </column>
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_965177703181742080]' derivation='User' name='[usr:Calculation_965177703181742080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1npppt10px6cb81ej7ny11u7hmwt].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1npppt10px6cb81ej7ny11u7hmwt].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703181742080:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1npppt10px6cb81ej7ny11u7hmwt].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1npppt10px6cb81ej7ny11u7hmwt].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703181742080:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1npppt10px6cb81ej7ny11u7hmwt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='39' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703181742080:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.263370156288147' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1npppt10px6cb81ej7ny11u7hmwt].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{266B2C03-185B-4FF2-90B5-A0849AFD93A5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths by Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='coviddeaths (PortfolioProject)' name='federated.1npppt10px6cb81ej7ny11u7hmwt' />
          </datasources>
          <datasource-dependencies datasource='federated.1npppt10px6cb81ej7ny11u7hmwt'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[sum:total_deaths:qk]' field-type='quantitative' max='278465163.95' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]' value='106' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6041989326477051' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1npppt10px6cb81ej7ny11u7hmwt].[sum:total_deaths:qk]</rows>
        <cols>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{37131017-F2A3-4927-8291-CFDADA393C00}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='coviddeaths (PortfolioProject)' name='federated.1npppt10px6cb81ej7ny11u7hmwt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1npppt10px6cb81ej7ny11u7hmwt'>
            <column caption='PercentPopInfected' datatype='real' name='[Calculation_965177703187746817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([total_cases])/sum([population]))*100' />
            </column>
            <column caption='Loc' datatype='string' name='[loc]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[loc]' derivation='None' name='[none:loc:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_965177703187746817]' derivation='User' name='[usr:Calculation_965177703187746817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[Longitude (generated)]' field-type='quantitative' max='-16179354.740698464' min='-57561165.904407978' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[Latitude (generated)]' field-type='quantitative' max='13036826.080168776' min='-7000682.2626204658' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]' value='#000000' />
            <format attr='background-color' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[Longitude (generated)]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703187746817:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703187746817:qk]' value='PercentPopInfected' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]' />
              <color column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703187746817:qk]' />
              <geometry column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1npppt10px6cb81ej7ny11u7hmwt].[Latitude (generated)]</rows>
        <cols>[federated.1npppt10px6cb81ej7ny11u7hmwt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C97FCADC-D71A-404C-A6BD-1B13DE82D0E2}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Infected over Time with a Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='coviddeaths (PortfolioProject)' name='federated.1npppt10px6cb81ej7ny11u7hmwt' />
          </datasources>
          <datasource-dependencies datasource='federated.1npppt10px6cb81ej7ny11u7hmwt'>
            <column caption='PercentPopInfected' datatype='real' name='[Calculation_965177703187746817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([total_cases])/sum([population]))*100' />
            </column>
            <column-instance column='[Calculation_965177703187746817]' derivation='User' forecast-column-base='[usr:Calculation_965177703187746817:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_965177703187746817:qk]' pivot='key' type='quantitative' />
            <column caption='Loc' datatype='string' name='[loc]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[loc]' derivation='None' name='[none:loc:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Rec Date' datatype='date' name='[rec_date]' role='dimension' type='ordinal' />
            <column-instance column='[rec_date]' derivation='Month-Trunc' name='[tmn:rec_date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_965177703187746817]' derivation='User' name='[usr:Calculation_965177703187746817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:loc:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:loc:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:loc:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:loc:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:loc:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[tmn:rec_date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1npppt10px6cb81ej7ny11u7hmwt].[tmn:rec_date:qk]' value='78' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]' />
              <text column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]' />
              <text column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[fVal:usr:Calculation_965177703187746817:qk]' />
              <color column='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1npppt10px6cb81ej7ny11u7hmwt].[fVal:usr:Calculation_965177703187746817:qk]</rows>
        <cols>[federated.1npppt10px6cb81ej7ny11u7hmwt].[tmn:rec_date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F40A1359-3E8C-4C6A-BA56-9E75975833F9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='8' param='horz' type-v2='layout-flow' w='99002' x='499' y='978'>
            <zone h='98044' id='6' type-v2='layout-basic' w='99002' x='499' y='978'>
              <zone h='27619' id='3' name='Sheet 1' w='49513' x='49988' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='5' name='Sheet 2' w='49489' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='10' name='Sheet 3' w='49489' x='499' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='70425' id='12' name='Sheet 4' w='49513' x='49988' y='28597'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='18093' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]&#10;[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:Forecast Indicator:nk]' type-v2='color' w='11409' x='88903' y='14914' />
        <zone h='6601' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703187746817:qk]' type-v2='color' w='9227' x='40212' y='1222' />
        <zone h='21516' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]' type-v2='color' w='9663' x='39651' y='49756' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='18' param='vert' type-v2='layout-flow' w='99002' x='499' y='978'>
                <zone fixed-size='280' h='49022' id='10' is-fixed='true' name='Sheet 3' w='49489' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6601' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703187746817:qk]' type-v2='color' w='9227' x='40212' y='1222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='213' h='27619' id='3' is-fixed='true' name='Sheet 1' w='49513' x='49988' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70425' id='12' is-fixed='true' name='Sheet 4' w='49513' x='49988' y='28597'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18093' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]&#10;[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:Forecast Indicator:nk]' type-v2='color' w='11409' x='88903' y='14914'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='5' is-fixed='true' name='Sheet 2' w='49489' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21516' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]' type-v2='color' w='9663' x='39651' y='49756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3648D667-5D45-43F5-9D66-C743FCBAFBD8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D0CB449-90D5-40D3-9116-645A9C139E49}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]</field>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAF0B7E7-5830-4E06-B45F-F73BA09D1033}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[usr:Calculation_965177703187746817:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AB67AFF5-5122-499E-9035-F2DF62C8FFED}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]&#10;[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1npppt10px6cb81ej7ny11u7hmwt].[tmn:rec_date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:Forecast Indicator:nk]</field>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]</field>
            <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[yr:rec_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D3E1C06-1EDF-4FBF-BE99-15451A0E6782}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid Dashboard'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:continent:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:Forecast Indicator:nk]</field>
              <field>[federated.1npppt10px6cb81ej7ny11u7hmwt].[none:loc:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{7B377C6D-23EC-446A-9552-74105F4D2C81}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid Dashboard' width='192'>
      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
      lRc27vffAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
